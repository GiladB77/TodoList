{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","value","inputText","onChange","e","setInputText","target","type","className","onClick","preventDefault","setTodos","todos","text","completed","id","Math","random","setStatus","name","Todo","todo","map","item","filter","el","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","getItem","setItem","JSON","stringify","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb90fa87.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Form(props) {\r\n\r\n    const inputTextHandler = (e) => {\r\n        props.setInputText(e.target.value)\r\n    }\r\n\r\n    const submitToHandler = (e) => {\r\n        e.preventDefault();\r\n        props.setTodos([\r\n            ...props.todos,\r\n            { text: props.inputText, completed: false, id: Math.random() * 100 }\r\n        ])\r\n        props.setInputText(\" \");\r\n    }\r\n\r\n    const statusHandler = (e) => {\r\n        props.setStatus(e.target.value)\r\n    }\r\n    return (\r\n        <form>\r\n            <input value={props.inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\"></input>\r\n            <button onClick={submitToHandler} className=\"todo-button\" type=\"submit\">\r\n                <i className=\"fas fa-plus-square\"></i>\r\n            </button>\r\n            <div className=\"select\">\r\n                <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n                    <option value=\"all\">All</option>\r\n                    <option value=\"completed\">Completed</option>\r\n                    <option value=\"uncompleted\">Uncompleted</option>\r\n                </select>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\nexport default Form;","import React from 'react';\r\n\r\nfunction Todo(props){\r\n\r\n    const deleteHandler = () => {\r\n        props.setTodos(props.todos.filter((el) => el.id !== props.todo.id));\r\n    };\r\n\r\n    const completeHandler = () => {\r\n        props.setTodos(\r\n            props.todos.map((item) => {\r\n                if (item.id === props.todo.id) {\r\n                    return {\r\n                        ...item,\r\n                        completed: !item.completed,\r\n                    }\r\n                }\r\n                return item;\r\n            })\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"todo\">\r\n            <li className={`todo-item ${props.todo.completed ? \"completed\" : \"\"}`}>{props.text}</li>\r\n            <button onClick={completeHandler} className=\"complete-btn\">\r\n                <i className=\"fas fa-check\"></i>\r\n            </button>\r\n            <button onClick={deleteHandler} className=\"trash-btn\">\r\n                <i className=\"fas fa-trash\"></i>\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\nexport default Todo;","import React from 'react';\r\nimport Todo from './Todo'\r\n\r\nconst TodoList = (props) => {\r\n    return (\r\n        <div className=\"todo-container\">\r\n            <ul className=\"todo-list\"></ul>\r\n            {props.filteredTodos.map((todo) => (\r\n                <Todo\r\n                    key={todo.id}\r\n                    text={todo.text}\r\n                    todos={props.todos}\r\n                    setTodos={props.setTodos} \r\n                    todo={todo}/>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\nexport default TodoList;","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Form from './components/Form';\nimport TodoList from './components/TodoList'\n\nfunction App() {\n  \n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  const filterHandler = () => {\n    switch (status) {\n      case 'completed':\n        setFilteredTodos(todos.filter(todo => todo.completed === true));\n        break;\n      case 'uncompleted':\n        setFilteredTodos(todos.filter(todo => todo.completed === false));\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  }\n\n  useEffect(() => {\n    getLocalTodos()\n  }, [])\n\n  useEffect(() => {\n    filterHandler();\n    saveLocalTodos();\n  }, [todos, status])\n\n  const getLocalTodos = () => {\n    if (localStorage.getItem(\"todos\") === null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    } else (\n      setTodos(JSON.parse(localStorage.getItem(\"todos\")))\n    )\n  }\n  const saveLocalTodos = () => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos))\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Gilad's Todo List</h1>\n      </header>\n\n      <Form\n        todos={todos}\n        setTodos={setTodos}\n        inputText={inputText}\n        setInputText={setInputText}\n        setStatus={setStatus} />\n\n      <TodoList todos={todos}\n        setTodos={setTodos}\n        filteredTodos={filteredTodos} />\n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}